LABEL description="Container for pyNei testing"

# Use the latest stable Debian image
FROM debian:bookworm-slim

ENV UV_VERSION=0.7.8
ENV PYODIDE_VERSION=0.27.6

RUN apt-get update && apt-get install -y \
    curl \
    wget \
    bzip2 \
    unzip \
    git \
    coreutils \
    file \
    build-essential \
    autoconf \
    zlib1g-dev \
    libbz2-dev \
    liblzma-dev \
    libcurl4-openssl-dev \
    libncurses5-dev \
    libncursesw5-dev \
    libisal-dev \
    libdeflate-dev \
    ca-certificates && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# uv
# Download the latest installer
RUN echo "Installing uv..."
ADD https://astral.sh/uv/${UV_VERSION}/install.sh /uv-installer.sh
# Run the installer then remove it
RUN sh /uv-installer.sh && rm /uv-installer.sh
# Ensure the installed binary is on the `PATH`
ENV PATH="/root/.local/bin/:$PATH"
RUN echo "Verifying uv..." && \
    uv --version && \
    echo "uv installed OK"

# Sync the project into a new environment, asserting the lockfile is up to date
COPY pyproject.toml uv.lock ./
RUN --mount=type=cache,target=/root/.cache/uv \
    uv sync --locked --compile-bytecode --no-install-project

# Create a virtualenv using the free-threaded Python
RUN uv venv --python cpython-3.13.3+freethreaded
# Activate it and install ruamel.yaml with --no-deps to avoid ruamel-yaml-clib
RUN uv pip install --python cpython-3.13.3+freethreaded ruamel.yaml --no-deps
RUN --mount=type=cache,target=/root/.cache/uv \
    uv sync --python cpython-3.13.3+freethreaded --locked --compile-bytecode --no-install-project

# nvm
RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash - && \
    apt-get install -y nodejs && \
    node -v && npm -v

#pyodide
WORKDIR /app
RUN wget https://github.com/pyodide/pyodide/releases/download/"${PYODIDE_VERSION}"/pyodide-"${PYODIDE_VERSION}".tar.bz2 && \
    tar xjf pyodide-"${PYODIDE_VERSION}".tar.bz2 && \
    rm pyodide-"${PYODIDE_VERSION}".tar.bz2

